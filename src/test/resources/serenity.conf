serenity {
    take.screenshots = FOR_EACH_ACTION
    ; take.screenshots = FOR_FAILURES
    timeout = 10
    ; restart.browser.for.each = never
    yaml {
        directory {
            path = "src/main/java/starter/selectors/yaml"
        }
    }
}

headless.mode = false

webdriver {
    driver = remote
    autodownload = true
    remote {
        url = "http://localhost:4444/wd/hub"
    }
    timeouts {
        implicitlywait = 10000
        pageload = 10000
        script = 10000
    }
    capabilities {
        browserName = "chrome"
        acceptInsecureCerts = true
        "goog:chromeOptions" {
            args = [
                "remote-allow-origins=*",
                "test-type",
                "no-sandbox",
                "ignore-certificate-errors",
                "--start-maximized",
                "incognito",
                "disable-infobars",
                "disable-gpu",
                "disable-default-apps",
                "disable-popup-blocking",
                "disable-dev-shm-usage",
                "disable-extensions",
                "disable-web-security",
                "disable-translate",
                "disable-logging",
                "--disable-search-engine-choice-screen"
            ]
            prefs {
                "intl.accept_languages" = "en"
                "safebrowsing.enabled" = true
            }
            "ssl.certificates" = [
                "src/test/resources/certs/genericClient.cer",
                "src/test/resources/certs/genericClient.privkey.pem"
            ]
        }
    }
}

environments {
    edge {
        webdriver {
            driver = edge
            timeouts {
                implicitlywait = 5000
                pageload = 5000
                script = 5000
            }
            capabilities {
                browserName = "MicrosoftEdge"
                acceptInsecureCerts = true
                "ms:edgeOptions" {
                    args = [
                        "remote-allow-origins=*",
                        "test-type",
                        "no-sandbox",
                        "ignore-certificate-errors",
                        "--start-maximized",
                        "inPrivate",
                        "disable-infobars",
                        "disable-gpu",
                        "disable-webgl",
                        "disable-default-apps",
                        "disable-popup-blocking",
                        "disable-dev-shm-usage",
                        "disable-extensions",
                        "disable-web-security",
                        "disable-translate",
                        "disable-logging",
                        "--disable-search-engine-choice-screen"
                    ]
                }
            }
        }
    }

    firefox {
        webdriver {
            driver = firefox
            timeouts {
                implicitlywait = 5000
                pageload = 5000
                script = 5000
            }
            capabilities {
                browserName = "firefox"
                acceptInsecureCerts = true
                "moz:firefoxOptions" {
                    args = [
                        "--private",
                        "--width=1920",
                        "--height=1080",
                        "--disable-popup-blocking",
                        "--disable-webgl",
                        "--disable-infobars",
                        "--disable-extensions",
                        "--disable-dev-shm-usage",
                        "--ignore-certificate-errors",
                        "--disable-web-security",
                        "--disable-translate",
                        "--disable-logging"
                    ]
                }
            }
        }
    }

    PROD {
        base.url = "https://ondemand.triskellsoftware.com/triskell/"
    }
    AWS {
        base.url = "https://intaws.triskellsoftware.com/triskell/"
    }
    DEV {
        base.url = "https://intdev.triskellsoftware.com/triskell/"
    }
    NR {
        base.url = "https://intnr.triskellsoftware.com/triskell/"
    }
}

filters {
    tags = "${tags}"
}